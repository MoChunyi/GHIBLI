{"version":3,"sources":["assets/images/title-logo.svg","assets/images/homeimage.jpg","assets/images/totoro-white-background.jpg","assets/images/totoro-run.gif","assets/images/totorologo.svg","components/Home.js","components/FilmsInfo.js","actions/filmsInfoActions.js","containers/FetchFilmsInfo.js","components/FilmsIndex.js","utils/FetchImagesByRUL.js","actions/currentFilmActions.js","components/FilmDetail.js","routes/index.js","actions/filmsBriefInfoActions.js","components/FilmsBriefInfo.js","layouts/MainIndex.js","reducers/filmsInfoReducer.js","reducers/filmsBriefInfoReducer.js","reducers/currentFilmReducer.js","reducers/index.js","store/index.js","index.js"],"names":["module","exports","__webpack_require__","p","useStyles","makeStyles","theme","homecontainer","padding","margin","width","height","maxWidth","maxHeight","backgroundImage","concat","homebgimage","backgroundSize","Home","props","classes","react_default","a","createElement","Container","className","gridroot","backgroundColor","borderRadius","boxShadow","shadows","card","& div","& h5","textAlign","& p","overflowY","cardcontent","cardtitle","FilmsInfo","useEffect","onSendRequest","_useState","useState","_useState2","Object","slicedToArray","Grid","container","spacing","justify","console","log","filmsinfo","length","map","item","url","imgs","titleshowurl","xhr","XMLHttpRequest","reader","FileReader","img","document","style","cursor","id","open","responseType","onloadend","this","status","readAsDataURL","response","src","result","getElementById","appendChild","send","key","xs","sm","md","overflow","react_router_dom","to","filmsInfoActions","type","payload","connect","state","filmsInfoReducer","filmsInfo","data","dispatch","ownProps","actions","JSON","parse","FilmsIndex","useTheme","Fragment","marginTop","bgimage","backgroundRepeat","totororun","top","zIndex","mobileStepper","position","FetchFilmsInfo","FetchImagesByURL","fetch","then","blob","imgblob","URL","createObjectURL","currentFilmAtions","setCurrentFilmID","fetchCurrentFilmDetailInfo","json","setDetailImags","urls","getState","currentFilmReducer","detailinfo","detailimgs","FetchImagesByRUL","imgsrc","rootContainer","detailimg","title","color","lineHeight","AutoPlaySwipeableViews","autoPlay","SwipeableViews","keys","queryString","window","location","search","params","URLSearchParams","Number","get","Typography","index","lg","director","release_date","description","message","GhibliRoutes","react_router","exact","path","component","FilmDetail","filmsBriefInfoActions","setFilmsBriefInfo","briefInfo","fetchFilmsBriefInfo","totorologo","titlelogo","background","linediv","borderLeft","marginLeft","orderdiv","filmsbriefinfo","filmsBriefInfoReducer","_React$useState","React","_React$useState2","setOpen","handleChange","prev","display","onClick","Collapse","in","onMouseLeave","textDecoration","alignItems","time","fontSize","appbar","appbarscroll","mainContainer","left","transform","dynamicimg","routelink","justifyContent","fontFamily","MainIndex","AppBar","Toolbar","components_FilmsBriefInfo","routes","initialState","fetching","fetched","fetcherror","arguments","undefined","action","objectSpread","produce","draftState","push","titleshowimgs","combineReducers","middleware","applyMiddleware","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducer","ReactDOM","render","es","layouts_MainIndex"],"mappings":"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","file":"static/js/main.52eed405.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/title-logo.faa7c5e5.svg\";","module.exports = __webpack_public_path__ + \"static/media/homeimage.69a3ae55.jpg\";","module.exports = __webpack_public_path__ + \"static/media/totoro-white-background.a6a7990b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/totoro-run.285ea0db.gif\";","module.exports = __webpack_public_path__ + \"static/media/totorologo.a04e0472.svg\";","import React, {} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Button from '@material-ui/core/Button';\r\nimport homebgimage from '../assets/images/homeimage.jpg';\r\nconst useStyles = makeStyles(theme => ({\r\n    homecontainer: {\r\n        padding: \"0 0 0 0\",\r\n        margin: '0',\r\n        width: '100%',\r\n        height: '800px',\r\n        maxWidth: 'none',\r\n        maxHeight: 'none',\r\n        backgroundImage: `url(${homebgimage})`,\r\n        backgroundSize:'cover'\r\n    }\r\n}))\r\n\r\nconst Home = (props) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Container className={classes.homecontainer}>\r\n            {/* <img style={{width: '100%', backgroundSize:'cover'}} src={homebgimage}></img> */}\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n","import React, {useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { Grid, Button, } from '@material-ui/core';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { isTSEnumMember } from '@babel/types';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    gridroot: {\r\n        backgroundColor: 'white',\r\n        borderRadius: '5px',\r\n        boxShadow: theme.shadows[15],\r\n        padding: '16px 8px'\r\n    },\r\n    card: {\r\n        boxShadow: theme.shadows[5],\r\n        '& div': {\r\n            height: \"100%\",\r\n            padding: '0',\r\n            '& h5': {\r\n                textAlign: 'center',\r\n                width: '100%',\r\n                height: '20%'\r\n            },\r\n            '& p': {\r\n                height: \"80%\",\r\n                overflowY: \"scroll\",\r\n                \r\n            } \r\n        },\r\n        height: '200px'\r\n    },\r\n    cardcontent: {\r\n        textAlign: 'center'\r\n    },\r\n    cardtitle: {\r\n        backgroundImage: 'linear-gradient(120deg, #fbc2eb 0%, #a6c1ee 100%)'\r\n    }\r\n}))\r\n\r\nconst FilmsInfo = (props) => {\r\n    useEffect(() => {\r\n        props.onSendRequest();\r\n    },[])\r\n    const classes = useStyles();\r\n    const [sendbtngridvisiable, setSendbtngridvisiable] = useState(true);\r\n    return (\r\n        <Grid container spacing={3} className={classes.gridroot} justify={'center'}>\r\n            {console.log(props)}\r\n            {\r\n                props.filmsinfo.length > 0 && props.filmsinfo.map(item => {\r\n                    let url = item.imgs.titleshowurl;\r\n                    console.log(url)\r\n                    console.log(\"url\", url)\r\n                    let xhr = new XMLHttpRequest();\r\n                    let reader = new FileReader();\r\n                    let img = document.createElement(\"img\")\r\n                    img.style.width=\"100%\";\r\n                    img.style.height=\"400px\";\r\n                    img.style.cursor=\"pointer\"\r\n                    let id = item.id;\r\n                    xhr.open(\"GET\", url, true);\r\n                    xhr.responseType=\"blob\";\r\n                    xhr.onloadend = function() {\r\n                        console.log(\"this\",this);\r\n                        if (this.status === 200) {\r\n                            reader.readAsDataURL(this.response);\r\n                        }\r\n                    }\r\n                    reader.onloadend = function() {\r\n                        img.src = this.result;\r\n                        document.getElementById(`${item.id}`).appendChild(img);\r\n\r\n                    }\r\n                    xhr.send();\r\n                    return (\r\n                        \r\n                        <Grid  key={`${item.id}`} item xs={6} sm={4} md={3} style={{overflow: 'hidden'}}>\r\n                            <Link to={`filmdetail?id=${item.id}`} id={`${item.id}`}>\r\n                            </Link>\r\n                        </Grid>                    \r\n                    )\r\n                })\r\n            }\r\n            \r\n            {/* <Grid  item xs={8} sm={6} md={4} justify={\"center\"} style={{display: 'flex'}}>\r\n                <Button id=\"sendbtn\" variant=\"contained\" onClick={props.onSendRequest}>\r\n                    SEND\r\n                </Button>\r\n            </Grid> */}\r\n            {/* 用thunk 请求 */}\r\n            {/* <Grid  item xs={8} sm={6} md={4} justify={\"center\"} style={{display: 'flex'}}>\r\n                <Button id=\"sendbtn\" variant=\"contained\" onClick={props.onSendRequestWithThunk}>\r\n                    SENDWITHTHUNK\r\n                </Button>\r\n            </Grid> */}\r\n            \r\n        </Grid>\r\n    )\r\n}\r\n\r\nFilmsInfo.propTypes = {\r\n    filmsinfo: PropTypes.array.isRequired,\r\n    onSendRequest: PropTypes.func.isRequired\r\n}\r\nexport default FilmsInfo;","export default  {\r\n    fetching:  {\r\n        type: \"FILMSINFO_FETCHING\"\r\n    },\r\n    fetched: (filmsinfo) => ({\r\n        type: \"FILMSINFO_FETCHED\",\r\n        payload: filmsinfo\r\n    }),\r\n    fetcherror: {\r\n        type: \"FILMSINFO_FAILED\"\r\n    },\r\n    // fetchWithThunk: function() {\r\n    //     return function(dispatch, getState) {\r\n    //         console.log(getState())\r\n    //     }\r\n    // }\r\n}","import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport FilmsInfo from '../components/FilmsInfo';\r\nimport actions from '../actions/filmsInfoActions';\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state)\r\n    return ({\r\n        filmsinfo: state.filmsInfoReducer.filmsInfo.data || [],\r\n    })   \r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n    onSendRequest: () => {\r\n        dispatch(actions.fetching)\r\n        const xhr = new XMLHttpRequest();\r\n        xhr.open(\"GET\", \"https://www.easy-mock.com/mock/5d0edce1e515aa4c2cc4adc6/ghibli/films\", true);\r\n        xhr.onloadend = function() {\r\n            console.log(this);\r\n            if (this.status === 200) {\r\n                dispatch(actions.fetched(JSON.parse(this.response)));\r\n            } else {\r\n                dispatch(actions.fetcherror)\r\n            }\r\n        }\r\n        xhr.send();\r\n    },\r\n    // onSendRequestWithThunk:() => { dispatch(actions.fetchWithThunk())}\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FilmsInfo);","import React from 'react';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport bgimage from '../assets/images/totoro-white-background.jpg';\r\nimport totororun from '../assets/images/totoro-run.gif';\r\nimport FetchFilmsInfo from '../containers/FetchFilmsInfo';\r\n\r\nconst FilmsIndex = () => {\r\n    const theme = useTheme();\r\n    return (\r\n        <React.Fragment>\r\n            <Container \r\n                    style={{marginTop: '0px', backgroundImage: `url(${bgimage})`, backgroundRepeat: 'no-repeat', backgroundSize: 'cover', height: '600px', maxWidth:'none'}}\r\n                >   <img src={totororun} className={\"imgrun\"}/>          \r\n                    \r\n                </Container>\r\n                <Container style={{top: '-80px', zIndex: theme.zIndex.mobileStepper, position: 'relative'}}>\r\n                    <FetchFilmsInfo/>\r\n            </Container>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default FilmsIndex;","const FetchImagesByURL = (url) => {\r\n    console.log(url)\r\n    return fetch(url).then(function(response){\r\n        if (response.status === 200) {\r\n            return response.blob();\r\n        }\r\n        return null\r\n    }).then(function(imgblob){\r\n        if (imgblob != null) {\r\n            return (URL.createObjectURL(imgblob));\r\n        }\r\n        return null;\r\n    })\r\n};\r\n\r\nexport default FetchImagesByURL;","import FetchImagesByRUL from '../utils/FetchImagesByRUL'\r\nconst currentFilmAtions = {\r\n    setCurrentFilmID: (id) => ({\r\n        type: 'SET_CURRENT_FILM',\r\n        payload: id\r\n    }),\r\n\r\n    fetchCurrentFilmDetailInfo: (url) => {\r\n        return  (dispatch) => { \r\n            return fetch(url).then(function(response){\r\n                        if (response.status === 200) {\r\n                            return response.json();\r\n                        }    \r\n                    }).then(function(data){\r\n                        console.log(data);\r\n                        dispatch({\r\n                            type: 'SET_CURRENT_FILM_DETAIL_INFO',\r\n                            payload: data\r\n                        })\r\n                    })\r\n        }\r\n    },\r\n    setDetailImags: (urls) => {\r\n        return function(dispatch, getState) {\r\n            let urls = getState().currentFilmReducer.detailinfo.data.result.imgs.detailimgs;\r\n            console.log(urls);\r\n            urls.map(url => {\r\n                FetchImagesByRUL(url).then(function(imgsrc){\r\n                    if (imgsrc != null) {\r\n                        dispatch({\r\n                            type: 'SET_DETAIL_IMAGS',\r\n                            payload: imgsrc\r\n                        })\r\n                    }\r\n                    \r\n                })\r\n            })\r\n        }        \r\n    }\r\n}\r\n\r\nexport default currentFilmAtions;","import React, {useEffect} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Container } from '@material-ui/core';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport { autoPlay } from 'react-swipeable-views-utils'\r\nimport actions from '../actions/currentFilmActions';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FetchImagesByRUL from '../utils/FetchImagesByRUL'\r\nconst useStyles = makeStyles(theme => ({\r\n    rootContainer: {\r\n        padding: '0',\r\n        margin: '0',\r\n        width: '100%',\r\n        maxWidth: 'none',\r\n        maxHeight: 'none',\r\n    },\r\n    detailimg: {\r\n        width: \"100%\"\r\n    },\r\n    title: {\r\n        position: 'absolute',\r\n        marginTop: '100px',\r\n        zIndex: 1100,\r\n        backgroundColor: '#27210e',\r\n        color: 'white',\r\n        height: '32px',\r\n        lineHeight: '32px'\r\n    }\r\n}));\r\n\r\nconst mapStateToProps = (state) => ({\r\n    detailinfo: Object.keys(state.currentFilmReducer.detailinfo).length > 0?state.currentFilmReducer.detailinfo.data.result:null,\r\n    detailimgs: state.currentFilmReducer.detailimgs\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    fetchCurrentFilmDetailInfo: (url) => {\r\n        return dispatch(actions.fetchCurrentFilmDetailInfo(url));\r\n    },\r\n    setCurrentFilmID: (id) => {dispatch(actions.setCurrentFilmID(id))},\r\n    setDetailImags: () => {\r\n        dispatch(actions.setDetailImags());\r\n    }\r\n})\r\n\r\nconst AutoPlaySwipeableViews = autoPlay(SwipeableViews);\r\nconst FilmDetail = (props) => {\r\n    useEffect(() => {\r\n        let queryString = window.location.search;\r\n        let params = new URLSearchParams(queryString);\r\n        let id = Number(params.get(\"id\"));\r\n        props.setCurrentFilmID(id)\r\n        let url = `https://www.easy-mock.com/mock/5d0edce1e515aa4c2cc4adc6/ghibli/filmitem?id=${id}`;\r\n        props.fetchCurrentFilmDetailInfo(url).then(function() {\r\n            props.setDetailImags();\r\n        });\r\n    }, [(new URLSearchParams(window.location.search)).get(\"id\")])\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <Container className={classes.rootContainer}>\r\n            {\r\n                props.detailinfo && \r\n                <Typography className={classes.title}>\r\n                    {\r\n                        props.detailinfo.title\r\n                    }\r\n                </Typography>\r\n            }\r\n            <Container className={classes.rootContainer}>\r\n                {\r\n                    props.detailimgs.length > 0 && \r\n                    <AutoPlaySwipeableViews>\r\n                        {\r\n                            props.detailimgs.map((imgsrc, index) => {\r\n                                return  <img key={index} src={imgsrc} className={classes.detailimg}/>\r\n                            })\r\n                        }\r\n                    </AutoPlaySwipeableViews>\r\n                    \r\n                }\r\n            </Container>\r\n            <Container>\r\n                {\r\n                    props.detailinfo && \r\n                    <Grid container>\r\n                        <Grid item lg={3} md={3} sm={3}>1</Grid>\r\n                        <Grid item lg={9} md={9} sm={9}>\r\n                            <Typography>\r\n                                <label>片名：</label>{props.detailinfo.title}\r\n                            </Typography>\r\n                            <Typography>\r\n                                <label>导演：</label>{props.detailinfo.director}\r\n                            </Typography>\r\n                            <Typography>\r\n                                <label>出品日期：</label>{props.detailinfo.release_date}\r\n                            </Typography>\r\n                            <Typography>\r\n                                <label>简介：</label><br/>\r\n                                {\r\n                                    props.detailinfo.description.map(message => {\r\n                                        return (\r\n                                            <Typography>{message}</Typography>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                }\r\n            </Container>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FilmDetail);","import React from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport Home from '../components/Home';\r\nimport FilmsIndex from '../components/FilmsIndex';\r\nimport FilmDetail from '../components/FilmDetail';\r\n\r\nconst GhibliRoutes = () => {\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/\" component={Home}/>\r\n            <Route exact path=\"/home\" component={Home}/>\r\n            <Route exact path=\"/films\" component={FilmsIndex}/>\r\n            <Route exact path=\"/filmdetail\" component={FilmDetail}/>\r\n            <Route exact path=\"/films/:id\" component={FilmDetail}/>\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default GhibliRoutes;","const filmsBriefInfoActions = {\r\n    setFilmsBriefInfo: (briefInfo) => ({\r\n        type: 'GET_FILMS_BRIEF_INFO_ACTIONS',\r\n        payload: briefInfo\r\n    }),\r\n    fetchFilmsBriefInfo: function(url) {\r\n        return function(dispatch, getState) {\r\n            fetch(url).then(function(response){\r\n                return (response.json());\r\n            }).then(function(data){\r\n                console.log(data.data.result);\r\n                dispatch({\r\n                    type: 'GET_FILMS_BRIEF_INFO_ACTIONS',\r\n                    payload: data.data.result\r\n                })\r\n            })\r\n        }\r\n    }\r\n}\r\nexport default filmsBriefInfoActions;","import React, {useState, useEffect} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport {Link} from 'react-router-dom'\r\nimport {makeStyles} from '@material-ui/core/styles'\r\nimport actions from '../actions/filmsBriefInfoActions'\r\nimport totorologo from '../assets/images/totorologo.svg';\r\nconst useStyles = makeStyles(theme => ({\r\n    totorologo: {\r\n        width: '64px',\r\n        height: '64px',\r\n        cursor: 'pointer'\r\n    }, \r\n    titlelogo: {\r\n        height: '64px'\r\n    },\r\n    briefInfo: {\r\n        background: 'rgba(255,255,255,0.5)',\r\n        padding: \"5px 0 0 10px\",\r\n    },\r\n    linediv: {\r\n        height: 30,\r\n        borderLeft: 'solid',\r\n        marginLeft: 20,\r\n        margin: '2px'\r\n    },\r\n    orderdiv: {\r\n        width:'40px',\r\n        height: '40px',\r\n        borderRadius: '50px',\r\n        backgroundColor: '#03a9f4',\r\n        lineHeight: '40px',\r\n    }\r\n}))\r\n\r\nconst mapStateToProps = (state) => ({\r\n    filmsbriefinfo: state.filmsBriefInfoReducer?state.filmsBriefInfoReducer:[]\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    fetchFilmsBriefInfo: (url) => {\r\n        dispatch(actions.fetchFilmsBriefInfo(url));\r\n    }\r\n})\r\n\r\nconst FilmsBriefInfo = (props) => {\r\n    useEffect(()=> {\r\n        props.fetchFilmsBriefInfo('https://www.easy-mock.com/mock/5d0edce1e515aa4c2cc4adc6/ghibli/films/briefinfos');\r\n    }, []);\r\n    const [open, setOpen] = React.useState(false);\r\n    function handleChange() {\r\n        setOpen(prev => !prev);\r\n    }   \r\n    const classes = useStyles();\r\n    return (\r\n        <div style={{display: 'inline-block', position:'absolute'}}>\r\n            <img src={totorologo} className={classes.totorologo} onClick={handleChange} />\r\n            <div style={{height: 600, overflow: 'auto'}}>\r\n                <Collapse className={classes.briefInfo} in={open} onMouseLeave={handleChange}>\r\n                    {props.filmsbriefinfo.map((item, index) => {\r\n                        if (index < props.filmsbriefinfo.length - 1) {\r\n                            return (\r\n                                <div key={item.id} >\r\n                                    <Link to={`filmdetail?id=${item.id}`} style={{textDecoration: 'none', cursor: 'pointer'}}>\r\n                                        <div style={{width: '260px'}}>\r\n                                            <span style={{display: 'flex', alignItems: 'center'}}>\r\n                                                <span style={{display: 'flex', }}>\r\n                                                    <div className={classes.orderdiv}>\r\n                                                        {item.time}\r\n                                                    </div>\r\n                                                </span>\r\n                                                <span style={{display: 'flex', width: '100%', fontSize: '18px', marginLeft: '5px', color: 'black'}}>{item.title}</span>\r\n                                            </span>\r\n                                        </div>\r\n                                    </Link> \r\n                                    <div className={classes.linediv}></div>   \r\n                                </div>\r\n                            )\r\n                            \r\n                        } else {\r\n                            return (\r\n                                <div key={item.id}>\r\n                                     <Link to={`filmdetail?id=${item.id}`} style={{textDecoration: 'none', cursor: 'pointer'}}>\r\n                                        <div style={{width: '260px'}}>\r\n                                            <span style={{display: 'flex', alignItems: 'center'}}>\r\n                                                <span style={{display: 'flex', }}>\r\n                                                    <div className={classes.orderdiv}>\r\n                                                        {item.time}\r\n                                                    </div>\r\n                                                </span>\r\n                                                <span style={{display: 'flex', width: '100%', fontSize: '18px', marginLeft: '5px', color: 'black'}}>{item.title}</span>\r\n                                            </span>\r\n                                        </div>\r\n                                    </Link>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    })}\r\n                </Collapse>    \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(FilmsBriefInfo);","import React, { useState, useEffect} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport {useTheme} from '@material-ui/core/styles'\r\nimport { Container, AppBar, Toolbar, Typography  } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\r\nimport clsx from 'clsx';\r\n\r\nimport titlelogo from '../assets/images/title-logo.svg';\r\nimport GhibliRoutes from '../routes';\r\nimport FilmsBriefInfo from '../components/FilmsBriefInfo';\r\nconst useStyles = makeStyles(theme => ({\r\n    appbar: {\r\n        zIndex: 0,\r\n        backgroundColor: 'transparent',\r\n        boxShadow: \"0 0 0 0\"\r\n    },\r\n    appbarscroll: {\r\n        backgroundColor: '#4dd0e1'\r\n    },\r\n    mainContainer: {\r\n        padding: '0',\r\n        margin: '0',\r\n        width: '100%',\r\n        maxWidth: 'none',\r\n        maxHeight: 'none',\r\n    },\r\n    totorologo: {\r\n        width: '64px',\r\n        height: '64px',\r\n        cursor: 'pointer'\r\n    },\r\n    title: {\r\n        color: '#bdbdbd',\r\n        position: 'relative',\r\n        left: '50%',\r\n        top: '50%',\r\n        display: 'inline-block',\r\n        transform: 'translate(-50%, -50%)',\r\n\r\n    },\r\n    dynamicimg: {\r\n        width: theme.spacing(8),\r\n        height: theme.spacing(8),\r\n    },\r\n    titlelogo: {\r\n        height: '64px',\r\n        marginLeft: 64\r\n    },\r\n    routelink: {\r\n        width: theme.spacing(8),\r\n        height: theme.spacing(8),\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        textDecoration: 'none',\r\n        color: 'black',\r\n        fontFamily: 'weight'\r\n    },\r\n    briefInfo: {\r\n        background: 'rgba(255,255,255,0.5)',\r\n        padding: \"5px 0 0 10px\",\r\n        height: 600,\r\n        overflow: 'auto',\r\n        position: 'absolute'\r\n    }\r\n}))\r\n\r\n\r\n\r\nconst MainIndex = (props) => {     \r\n    const theme = useTheme();\r\n    // let trigger = useScrollTrigger({disableHysteresis: 'true', threshold: 400});\r\n    const classes = useStyles();\r\n    return (\r\n        <Container style={{margin: 0, padding: 0, maxWidth: 'none'}}>\r\n            <AppBar className={classes.appbarscroll}  color=\"default\">\r\n                <Toolbar>\r\n                    <Container style={{display: 'flex'}}>\r\n                        <FilmsBriefInfo></FilmsBriefInfo>\r\n                        <img src={titlelogo} className={classes.titlelogo}/>\r\n                        <Link to=\"/home\"  className={classes.routelink}>\r\n                            <Typography>\r\n                                Home\r\n                            </Typography>\r\n                        </Link>\r\n                        <Link to=\"/films\" className={classes.routelink}>\r\n                            <Typography>\r\n                                Films\r\n                            </Typography>\r\n                        </Link>\r\n                    </Container>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Container className={classes.mainContainer}>       \r\n                <GhibliRoutes></GhibliRoutes>\r\n            </Container>            \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default (MainIndex);","const initialState = {\r\n    fetching: false,\r\n    fetched: false,\r\n    fetcherror: null,\r\n    filmsInfo: []\r\n}\r\n\r\nconst filmsInfoReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case \"FILMSINFO_FETCHING\": {\r\n            console.log(\"feteching\");\r\n            return {...state, fetching: true}\r\n           \r\n        }\r\n        case \"FILMSINFO_FETCHED\": {\r\n            console.log(\"fetched\");\r\n            return {...state, fetched: true, filmsInfo: action.payload}\r\n            \r\n        }\r\n        case \"FILMSINFO_FAILED\": {\r\n            return {...state, fetcherror: true}\r\n            \r\n        }\r\n        default: {\r\n            return state;           \r\n        }\r\n    }\r\n}\r\n\r\nexport default filmsInfoReducer;","import produce  from 'immer';\r\nconst filmsBriefInfoReducer = (state = [], action) => {\r\n    let newstate;\r\n    switch (action.type) {\r\n        case 'GET_FILMS_BRIEF_INFO_ACTIONS': {\r\n            // 不能直接对draftstate赋值。\r\n            newstate = produce(state, draftState => {\r\n                draftState.length=0;\r\n                action.payload.map(item => draftState.push(item))\r\n                \r\n            })            \r\n            return newstate;\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nexport default filmsBriefInfoReducer;","import produce from 'immer';\r\nconst currentFilmReducer = (state = {id: null, detailinfo: {}, detailimgs: [], titleshowimgs: null}, action) => {\r\n    let newstate;\r\n    switch (action.type) {\r\n        case 'SET_CURRENT_FILM': {\r\n            newstate = produce(state, draftState => {\r\n                draftState.id = action.payload;\r\n                draftState.detailimgs.length = 0;\r\n            })\r\n            return newstate;\r\n        }\r\n        case 'SET_CURRENT_FILM_DETAIL_INFO': {\r\n            newstate = produce(state, draftState => {\r\n                console.log(action.payload);\r\n                draftState.detailinfo = action.payload;\r\n            })\r\n            return newstate;\r\n        }\r\n        case 'SET_DETAIL_IMAGS': {\r\n            newstate = produce(state, draftState => {\r\n                draftState.detailimgs.push(action.payload)\r\n            })\r\n            return newstate;\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nexport default currentFilmReducer;","import {combineReducers} from 'redux';\r\nimport filmsInfoReducer from './filmsInfoReducer';\r\nimport filmsBriefInfoReducer from './filmsBriefInfoReducer';\r\nimport currentFilmReducer from './currentFilmReducer';\r\nexport default combineReducers({\r\n    filmsInfoReducer,\r\n    filmsBriefInfoReducer,\r\n    currentFilmReducer, \r\n});","import {createStore, applyMiddleware, compose} from 'redux';\r\nimport reducer from '../reducers';\r\nimport thunk from 'redux-thunk';\r\n\r\n// 如有initial state 则作为createStore的第三个参数，否则第二个参数\r\nconst middleware = applyMiddleware(thunk)\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n        reducer,\r\n        composeEnhancers(middleware)\r\n    );\r\nexport default store;","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css'\r\nimport MainIndex from './layouts/MainIndex'\r\nimport store from './store';\r\nconst App = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <Provider store={store}>\r\n                <Router>\r\n                    <MainIndex/>\r\n                </Router>   \r\n            </Provider>           \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nReactDOM.render(<App/>, document.getElementById(\"root\"));"],"sourceRoot":""}
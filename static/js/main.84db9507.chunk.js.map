{"version":3,"sources":["assets/images/totorologo.svg","assets/images/title-logo.svg","assets/images/homeimage.jpg","components/FilmsInfo.js","actions/filmsInfoActions.js","containers/FetchFilmsInfo.js","components/Home.js","components/FilmsIndex.js","routes/index.js","layouts/MainIndex.js","reducers/filmsInfoReducer.js","reducers/index.js","store/index.js","index.js","assets/images/totoro-white-background.jpg","assets/images/totoro-run.gif"],"names":["module","exports","__webpack_require__","p","useStyles","makeStyles","theme","gridroot","backgroundColor","borderRadius","boxShadow","shadows","padding","card","& div","height","& h5","textAlign","width","& p","overflowY","cardcontent","cardtitle","backgroundImage","FilmsInfo","props","classes","react_default","a","createElement","Grid","container","spacing","className","justify","console","log","filmsinfo","length","map","item","url","imgs","titleshowurl","xhr","XMLHttpRequest","reader","FileReader","img","document","style","cursor","id","open","responseType","onloadend","this","status","readAsDataURL","response","src","result","getElementById","concat","appendChild","send","xs","sm","md","overflow","display","Button","variant","onClick","onSendRequest","filmsInfoActions","type","payload","connect","state","filmsInfoReducer","filmsInfo","data","dispatch","ownProps","actions","JSON","parse","homecontainer","margin","maxWidth","maxHeight","Home","Container","homebgimage","i","divimage","image","Image","FilmsIndex","useTheme","Fragment","marginTop","bgimage","backgroundRepeat","backgroundSize","totororun","top","zIndex","mobileStepper","position","FetchFilmsInfo","GhibliRoutes","react_router","exact","path","component","appbar","appbarscroll","mainContainer","totorologo","title","color","left","transform","dynamicimg","titlelogo","routelink","alignItems","justifyContent","textDecoration","fontFamily","MainIndex","_clsx","trigger","useScrollTrigger","disableHysteresis","threshold","AppBar","clsx","Object","defineProperty","Toolbar","react_router_dom","to","Typography","routes","initialState","fetching","fetched","fetcherror","arguments","undefined","action","objectSpread","combineReducers","middleware","applyMiddleware","thunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducer","ReactDOM","render","es","layouts_MainIndex"],"mappings":"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","file":"static/js/main.84db9507.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/totorologo.a04e0472.svg\";","module.exports = __webpack_public_path__ + \"static/media/title-logo.faa7c5e5.svg\";","module.exports = __webpack_public_path__ + \"static/media/homeimage.69a3ae55.jpg\";","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Grid, Button, } from '@material-ui/core';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { isTSEnumMember } from '@babel/types';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    gridroot: {\r\n        backgroundColor: 'white',\r\n        borderRadius: '5px',\r\n        boxShadow: theme.shadows[15],\r\n        padding: '16px 8px'\r\n    },\r\n    card: {\r\n        boxShadow: theme.shadows[5],\r\n        '& div': {\r\n            height: \"100%\",\r\n            padding: '0',\r\n            '& h5': {\r\n                textAlign: 'center',\r\n                width: '100%',\r\n                height: '20%'\r\n            },\r\n            '& p': {\r\n                height: \"80%\",\r\n                overflowY: \"scroll\",\r\n                \r\n            } \r\n        },\r\n        height: '200px'\r\n    },\r\n    cardcontent: {\r\n        textAlign: 'center'\r\n    },\r\n    cardtitle: {\r\n        backgroundImage: 'linear-gradient(120deg, #fbc2eb 0%, #a6c1ee 100%)'\r\n    }\r\n}))\r\n\r\nconst FilmsInfo = (props) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Grid container spacing={3} className={classes.gridroot} justify={'center'}>\r\n            {console.log(props)}\r\n            {\r\n                props.filmsinfo.length > 0 && props.filmsinfo.map(item => {\r\n                    let url = item.imgs.titleshowurl;\r\n                    console.log(\"url\", url)\r\n                    let xhr = new XMLHttpRequest();\r\n                    let reader = new FileReader();\r\n                    let img = document.createElement(\"img\")\r\n                    img.style.width=\"100%\";\r\n                    img.style.height=\"400px\";\r\n                    img.style.cursor=\"pointer\"\r\n                    let id = item.id;\r\n                    xhr.open(\"GET\", url, true);\r\n                    xhr.responseType=\"blob\";\r\n                    xhr.onloadend = function() {\r\n                        console.log(\"this\",this);\r\n                        if (this.status === 200) {\r\n                            reader.readAsDataURL(this.response);\r\n                        }\r\n                    }\r\n                    reader.onloadend = function() {\r\n                        img.src = this.result;\r\n                        document.getElementById(`${item.id}`).appendChild(img);\r\n\r\n                    }\r\n                    xhr.send();\r\n                    return (\r\n                        <Grid id={`${item.id}`} item xs={6} sm={4} md={3} style={{overflow: 'hidden'}}>\r\n                        </Grid>\r\n                    )\r\n                })\r\n            }\r\n            <Grid item xs={8} sm={6} md={4} justify={\"center\"} style={{display: 'flex'}}>\r\n                <Button variant=\"contained\" onClick={props.onSendRequest}>\r\n                    SEND\r\n                </Button>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nFilmsInfo.propTypes = {\r\n    filmsinfo: PropTypes.array.isRequired,\r\n    onSendRequest: PropTypes.func.isRequired\r\n}\r\nexport default FilmsInfo;","export default  {\r\n    fetching:  {\r\n        type: \"FILMSINFO_FETCHING\"\r\n    },\r\n    fetched: (filmsinfo) => ({\r\n        type: \"FILMSINFO_FETCHED\",\r\n        payload: filmsinfo\r\n    }),\r\n    fetcherror: {\r\n        type: \"FILMSINFO_FAILED\"\r\n    }\r\n}","import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport FilmsInfo from '../components/FilmsInfo';\r\nimport actions from '../actions/filmsInfoActions';\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state)\r\n    return ({\r\n        filmsinfo: state.filmsInfoReducer.filmsInfo.data || [],\r\n    })   \r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n    onSendRequest: () => {\r\n        dispatch(actions.fetching)\r\n        const xhr = new XMLHttpRequest();\r\n        xhr.open(\"GET\", \"https://www.easy-mock.com/mock/5d0edce1e515aa4c2cc4adc6/ghibli/films\", true);\r\n        xhr.onloadend = function() {\r\n            console.log(this);\r\n            if (this.status === 200) {\r\n                dispatch(actions.fetched(JSON.parse(this.response)));\r\n            } else {\r\n                dispatch(actions.fetcherror)\r\n            }\r\n        }\r\n        xhr.send();\r\n    }\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FilmsInfo);","import React, {} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Button from '@material-ui/core/Button';\r\nimport homebgimage from '../assets/images/homeimage.jpg';\r\nconst useStyles = makeStyles(theme => ({\r\n    homecontainer: {\r\n        padding: \"0 0 0 0\",\r\n        margin: '0',\r\n        width: '100%',\r\n        maxWidth: 'none',\r\n        maxHeight: 'none',\r\n    }\r\n}))\r\n\r\nconst Home = (props) => {\r\n    const classes = useStyles();\r\n    const getImages = () => {\r\n        let xhr = new XMLHttpRequest();\r\n        let reader = new FileReader();\r\n        for (let i = 0; i < 2; i++) {\r\n            xhr.open(\"GET\", \"https://raw.githubusercontent.com/MoChunyi/mcydatabase/master/ghibli/datas/imgs/arrietty/1.jpg\", true);\r\n        xhr.responseType=\"blob\";\r\n        xhr.onloadend = function() {       \r\n            console.log(this.response);\r\n            reader.readAsDataURL(this.response)\r\n        }\r\n        reader.onloadend = function() {\r\n            let divimage = document.getElementById(\"image\");\r\n            let image = new Image();\r\n            image.height = 100;\r\n            console.log(this);\r\n            image.src = this.result;\r\n            divimage.appendChild(image);\r\n        }\r\n        xhr.send();\r\n        }\r\n        \r\n    }\r\n    return (\r\n        <Container className={classes.homecontainer}>\r\n            <img style={{width: '100%'}} src={homebgimage}></img>\r\n            <Button onClick={getImages}>\r\n                getImages\r\n            </Button>\r\n            <div id='image'></div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport bgimage from '../assets/images/totoro-white-background.jpg';\r\nimport totororun from '../assets/images/totoro-run.gif';\r\nimport FetchFilmsInfo from '../containers/FetchFilmsInfo';\r\n\r\nconst FilmsIndex = () => {\r\n    const theme = useTheme();\r\n    return (\r\n        <React.Fragment>\r\n            <Container \r\n                    style={{marginTop: '0px', backgroundImage: `url(${bgimage})`, backgroundRepeat: 'no-repeat', backgroundSize: 'cover', height: '600px', maxWidth:'none'}}\r\n                >   <img src={totororun} className={\"imgrun\"}/>          \r\n                    \r\n                </Container>\r\n                <Container style={{top: '-80px', zIndex: theme.zIndex.mobileStepper, position: 'relative'}}>\r\n                    <FetchFilmsInfo/>\r\n            </Container>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default FilmsIndex;","import React from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport Home from '../components/Home';\r\nimport FilmsIndex from '../components/FilmsIndex';\r\n\r\nconst GhibliRoutes = () => {\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/\" component={Home}/>\r\n            <Route path=\"/home\" component={Home}/>\r\n            <Route path=\"/films\" component={FilmsIndex}/>\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default GhibliRoutes;","import React, { useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport {useTheme} from '@material-ui/core/styles'\r\nimport { Container, AppBar, Toolbar, Typography  } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\r\nimport clsx from 'clsx';\r\nimport bgimage from '../assets/images/totoro-white-background.jpg';\r\nimport totorologo from '../assets/images/totorologo.svg';\r\nimport totororun from '../assets/images/totoro-run.gif';\r\nimport titlelogo from '../assets/images/title-logo.svg';\r\nimport FetchFilmsInfo from '../containers/FetchFilmsInfo';\r\nimport GhibliRoutes from '../routes';\r\nconst useStyles = makeStyles(theme => ({\r\n    appbar: {\r\n        zIndex: 0,\r\n        backgroundColor: 'transparent',\r\n        boxShadow: \"0 0 0 0\"\r\n    },\r\n    appbarscroll: {\r\n        backgroundColor: '#4dd0e1'\r\n    },\r\n    mainContainer: {\r\n        padding: '0',\r\n        margin: '0',\r\n        width: '100%',\r\n        maxWidth: 'none',\r\n        maxHeight: 'none',\r\n    },\r\n    totorologo: {\r\n        width: '64px',\r\n        height: '64px',\r\n    },\r\n    title: {\r\n        color: '#bdbdbd',\r\n        position: 'relative',\r\n        left: '50%',\r\n        top: '50%',\r\n        display: 'inline-block',\r\n        transform: 'translate(-50%, -50%)',\r\n\r\n    },\r\n    dynamicimg: {\r\n        width: theme.spacing(8),\r\n        height: theme.spacing(8),\r\n    },\r\n    titlelogo: {\r\n        height: '64px'\r\n    },\r\n    routelink: {\r\n        width: theme.spacing(8),\r\n        height: theme.spacing(8),\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        textDecoration: 'none',\r\n        color: 'black',\r\n        fontFamily: 'weight'\r\n    }\r\n}))\r\n\r\nconst MainIndex = (props) => {\r\n    const theme = useTheme();\r\n    let trigger = useScrollTrigger({disableHysteresis: 'true', threshold: 500});\r\n    const classes = useStyles();\r\n    return (\r\n        <Container style={{margin: 0, padding: 0, maxWidth: 'none'}}>\r\n            <AppBar className={clsx({[classes.appbar]: !trigger, [classes.appbarscroll]: trigger})}  color=\"default\">\r\n                <Toolbar>\r\n                    <Container style={{display: 'flex'}}>\r\n                        <img src={totorologo} className={classes.totorologo} />\r\n                        <img src={titlelogo} className={classes.titlelogo}/>\r\n                        <Link to=\"/home\"  className={classes.routelink}>\r\n                            <Typography>\r\n                                Home\r\n                            </Typography>\r\n                        </Link>\r\n                        <Link to=\"/films\" className={classes.routelink}>\r\n                            <Typography>\r\n                                Films\r\n                            </Typography>\r\n                        </Link>\r\n                    </Container>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Container className={classes.mainContainer}>       \r\n                <GhibliRoutes></GhibliRoutes>\r\n            </Container>\r\n            \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default MainIndex;","const initialState = {\r\n    fetching: false,\r\n    fetched: false,\r\n    fetcherror: null,\r\n    filmsInfo: []\r\n}\r\n\r\nconst filmsInfoReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case \"FILMSINFO_FETCHING\": {\r\n            console.log(\"feteching\");\r\n            return {...state, fetching: true}\r\n           \r\n        }\r\n        case \"FILMSINFO_FETCHED\": {\r\n            console.log(\"fetched\");\r\n            return {...state, fetched: true, filmsInfo: action.payload}\r\n            \r\n        }\r\n        case \"FILMSINFO_FAILED\": {\r\n            return {...state, fetcherror: true}\r\n            \r\n        }\r\n        default: {\r\n            return state;           \r\n        }\r\n    }\r\n}\r\n\r\nexport default filmsInfoReducer;","import {combineReducers} from 'redux';\r\nimport filmsInfoReducer from './filmsInfoReducer';\r\nexport default combineReducers({\r\n    filmsInfoReducer,\r\n});","import {createStore, applyMiddleware, compose} from 'redux';\r\nimport reducer from '../reducers';\r\nimport thunk from 'redux-thunk';\r\n\r\n// 如有initial state 则作为createStore的第三个参数，否则第二个参数\r\nconst middleware = applyMiddleware(thunk)\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n        reducer,\r\n        composeEnhancers(middleware)\r\n    );\r\nexport default store;","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css'\r\nimport MainIndex from './layouts/MainIndex'\r\nimport store from './store';\r\nconst App = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <Provider store={store}>\r\n                <Router>\r\n                    <MainIndex/>\r\n                </Router>   \r\n            </Provider>           \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nReactDOM.render(<App/>, document.getElementById(\"root\"));","module.exports = __webpack_public_path__ + \"static/media/totoro-white-background.a6a7990b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/totoro-run.285ea0db.gif\";"],"sourceRoot":""}
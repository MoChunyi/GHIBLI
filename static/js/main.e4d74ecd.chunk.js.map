{"version":3,"sources":["assets/images/totoro-white-background.jpg","assets/images/totorologo.svg","assets/images/totoro-run.gif","components/FilmsInfo.js","actions/filmsInfoActions.js","containers/FetchFilmsInfo.js","layouts/MainIndex.js","reducers/filmsInfoReducer.js","reducers/index.js","store/index.js","index.js"],"names":["module","exports","__webpack_require__","p","useStyles","makeStyles","theme","gridroot","backgroundColor","borderRadius","boxShadow","shadows","padding","card","& div","textAlign","height","cardcontent","FilmsInfo","props","classes","react_default","a","createElement","Grid","container","spacing","className","justify","console","log","filmsinfo","map","item","index","key","xs","sm","md","style","overflow","Card","CardContent","Typography","variant","display","title","overflowY","description","Button","onClick","onSendRequest","filmsInfoActions","type","payload","connect","state","filmsInfoReducer","filmsInfo","dispatch","ownProps","actions","xhr","XMLHttpRequest","open","onloadend","this","status","JSON","parse","response","send","appbar","zIndex","appbarscroll","totorologo","width","color","position","left","top","transform","dynamicimg","MainIndex","_clsx","useTheme","trigger","useScrollTrigger","disableHysteresis","threshold","Container","margin","maxWidth","AppBar","clsx","Object","defineProperty","Toolbar","src","marginTop","backgroundImage","concat","bgimage","backgroundRepeat","backgroundSize","totororun","mobileStepper","FetchFilmsInfo","initialState","fetching","fetched","fetcherror","arguments","length","undefined","action","objectSpread","combineReducers","middleware","applyMiddleware","thunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducer","ReactDOM","render","Fragment","es","layouts_MainIndex","document","getElementById"],"mappings":"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","file":"static/js/main.e4d74ecd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/totoro-white-background.a6a7990b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/totorologo.a04e0472.svg\";","module.exports = __webpack_public_path__ + \"static/media/totoro-run.285ea0db.gif\";","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Grid, Button, } from '@material-ui/core';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    gridroot: {\r\n        backgroundColor: 'white',\r\n        borderRadius: '5px',\r\n        boxShadow: theme.shadows[15],\r\n        padding: '16px 8px'\r\n    },\r\n    card: {\r\n        boxShadow: theme.shadows[5],\r\n        '& div': {\r\n            textAlign: 'center'\r\n        },\r\n        height: '200px'\r\n    },\r\n    cardcontent: {\r\n        textAlign: 'center'\r\n    }\r\n}))\r\n\r\nconst FilmsInfo = (props) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Grid container spacing={3} className={classes.gridroot} justify={'center'}>\r\n            {console.log(props)}\r\n            {\r\n                props.filmsinfo && props.filmsinfo.map((item, index) => {\r\n                    return (\r\n                        <Grid  item key={index} xs={8} sm={6} md={4} style={{overflow: 'hidden'}}>\r\n                            <Card className={classes.card}>\r\n                                <CardContent >\r\n                                    <Typography variant={\"h5\"} style={{display: 'inline-block'}}>\r\n                                        {item.title}\r\n                                    </Typography>\r\n                                    <Typography style={{overflowY: 'auto'}} >\r\n                                        {item.description}\r\n                                    </Typography>\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                    )\r\n                })\r\n            }\r\n            <Grid item>\r\n                <Button onClick={props.onSendRequest}>\r\n                    SEND\r\n                </Button>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nFilmsInfo.propTypes = {\r\n    filmsinfo: PropTypes.array.isRequired,\r\n    onSendRequest: PropTypes.func.isRequired\r\n}\r\nexport default FilmsInfo;","export default  {\r\n    fetching:  {\r\n        type: \"FILMSINFO_FETCHING\"\r\n    },\r\n    fetched: (filmsinfo) => ({\r\n        type: \"FILMSINFO_FETCHED\",\r\n        payload: filmsinfo\r\n    }),\r\n    fetcherror: {\r\n        type: \"FILMSINFO_FAILED\"\r\n    }\r\n}","import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport FilmsInfo from '../components/FilmsInfo';\r\nimport actions from '../actions/filmsInfoActions';\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state)\r\n    return ({\r\n        filmsinfo: state.filmsInfoReducer.filmsInfo,\r\n    })   \r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n    onSendRequest: () => {\r\n        dispatch(actions.fetching)\r\n        const xhr = new XMLHttpRequest();\r\n        xhr.open(\"GET\", \"https://ghibliapi.herokuapp.com/films\", true);\r\n        xhr.onloadend = function() {\r\n            console.log(this);\r\n            if (this.status === 200) {\r\n                dispatch(actions.fetched(JSON.parse(this.response)));\r\n                console.log(ownProps);\r\n            } else {\r\n                dispatch(actions.fetcherror)\r\n            }\r\n        }\r\n        xhr.send();\r\n    }\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FilmsInfo);","import React, { useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport {useTheme} from '@material-ui/core/styles'\r\nimport { Container, AppBar, Toolbar, Typography  } from '@material-ui/core';\r\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\r\nimport clsx from 'clsx';\r\nimport bgimage from '../assets/images/totoro-white-background.jpg';\r\nimport totorologo from '../assets/images/totorologo.svg';\r\nimport totororun from '../assets/images/totoro-run.gif';\r\nimport FetchFilmsInfo from '../containers/FetchFilmsInfo';\r\nconst useStyles = makeStyles(theme => ({\r\n    appbar: {\r\n        zIndex: 0,\r\n        backgroundColor: 'transparent',\r\n        boxShadow: \"0 0 0 0\"\r\n    },\r\n    appbarscroll: {\r\n        backgroundColor: '#4dd0e1'\r\n    },\r\n    totorologo: {\r\n        width: '64px',\r\n        height: '64px',\r\n    },\r\n    title: {\r\n        color: '#bdbdbd',\r\n        position: 'relative',\r\n        left: '50%',\r\n        top: '50%',\r\n        display: 'inline-block',\r\n        transform: 'translate(-50%, -50%)',\r\n\r\n    },\r\n    dynamicimg: {\r\n        width: theme.spacing(8),\r\n        height: theme.spacing(8),\r\n    }\r\n}))\r\n\r\nconst MainIndex = (props) => {\r\n    const theme = useTheme();\r\n    let trigger = useScrollTrigger({disableHysteresis: 'true', threshold: 10});\r\n    const classes = useStyles();\r\n    return (\r\n        <Container style={{margin: 0, padding: 0, maxWidth: 'none'}}>\r\n            <AppBar className={clsx({[classes.appbar]: !trigger, [classes.appbarscroll]: trigger})}  color=\"default\">\r\n                <Toolbar>\r\n                    <Container>\r\n                        <img src={totorologo} className={classes.totorologo} />\r\n                    </Container>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Container \r\n                style={{marginTop: '0px', backgroundImage: `url(${bgimage})`, backgroundRepeat: 'no-repeat', backgroundSize: 'cover', height: '600px', maxWidth:'none'}}\r\n            >   <img src={totororun} className={\"imgrun\"}/>          \r\n                <Typography variant={\"h1\"} className={classes.title}>\r\n                    吉卜力工作室\r\n                </Typography>\r\n            </Container>\r\n            <Container style={{top: '-80px', zIndex: theme.zIndex.mobileStepper, position: 'relative'}}>\r\n                <FetchFilmsInfo />\r\n            </Container>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default MainIndex;","const initialState = {\r\n    fetching: false,\r\n    fetched: false,\r\n    fetcherror: null,\r\n    filmsInfo: []\r\n}\r\n\r\nconst filmsInfoReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case \"FILMSINFO_FETCHING\": {\r\n            console.log(\"feteching\");\r\n            return {...state, fetching: true}\r\n           \r\n        }\r\n        case \"FILMSINFO_FETCHED\": {\r\n            console.log(\"fetched\");\r\n            return {...state, fetched: true, filmsInfo: action.payload}\r\n            \r\n        }\r\n        case \"FILMSINFO_FAILED\": {\r\n            return {...state, fetcherror: true}\r\n            \r\n        }\r\n        default: {\r\n            return state;           \r\n        }\r\n    }\r\n}\r\n\r\nexport default filmsInfoReducer;","import {combineReducers} from 'redux';\r\nimport filmsInfoReducer from './filmsInfoReducer';\r\nexport default combineReducers({\r\n    filmsInfoReducer,\r\n});","import {createStore, applyMiddleware, compose} from 'redux';\r\nimport reducer from '../reducers';\r\nimport thunk from 'redux-thunk';\r\n\r\n// 如有initial state 则作为createStore的第三个参数，否则第二个参数\r\nconst middleware = applyMiddleware(thunk)\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n        reducer,\r\n        composeEnhancers(middleware)\r\n    );\r\nexport default store;","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css'\r\nimport MainIndex from './layouts/MainIndex'\r\nimport store from './store';\r\nconst App = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <Provider store={store}>\r\n                <MainIndex/>\r\n            </Provider>           \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nReactDOM.render(<App/>, document.getElementById(\"root\"));"],"sourceRoot":""}